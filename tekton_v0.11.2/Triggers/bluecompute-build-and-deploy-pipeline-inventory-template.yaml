apiVersion: tekton.dev/v1alpha1
kind: TriggerTemplate
# This requires the simple pipeline tasks from the pipeline hotel to be installed first
# and the simple pipeline, and the conditional resource
metadata:
  name: bluecompute-build-and-deploy-pipeline-inventory-template
spec:
  resourcetemplates:
  - apiVersion: tekton.dev/v1alpha1
    kind: PipelineResource
    metadata:
      name: git-source-$(uid)
      namespace: $(params.webhooks-tekton-target-namespace)
    spec:
      type: git
      params:
      - name: revision
        value: $(params.gitrevision)
      - name: url
        value: $(params.gitrepositoryurl)
  - apiVersion: tekton.dev/v1alpha1
    kind: PipelineResource
    metadata:
      name: docker-image-$(uid)
      namespace: $(params.webhooks-tekton-target-namespace)
    spec:
      type: image
      params:
      - name: url
        value: $(params.webhooks-tekton-docker-registry)/$(params.docker-tag)
  - apiVersion: tekton.dev/v1alpha1
    kind: PipelineRun
    metadata:
      generateName: buildah-pipeline-run-
      namespace: $(params.webhooks-tekton-target-namespace)
      labels:
        webhooks.tekton.dev/gitServer: $(params.webhooks-tekton-git-server)
        webhooks.tekton.dev/gitOrg: $(params.webhooks-tekton-git-org)
        webhooks.tekton.dev/gitRepo: $(params.webhooks-tekton-git-repo)
        webhooks.tekton.dev/gitBranch: $(params.webhooks-tekton-git-branch)
    spec:
      serviceAccountName: $(params.webhooks-tekton-service-account)
      timeout: 1h0m0s
      pipelineRef:
        name: bluecompute-build-and-deploy-pipeline-inventory
      params:
      - name: event-type
        value: $(params.event-type)
      - name: pathToYamlFile
        value: "k8s_yamls"
      - name: pathToDeployableFile
        value: "k8s_yamls_mcm"
      resources:
      - name: git-source-inventory
        resourceRef:
          name: git-source-$(uid)
      - name: docker-image-inventory
        resourceRef:
          name: docker-image-$(uid)
