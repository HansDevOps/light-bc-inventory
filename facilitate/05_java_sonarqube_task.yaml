apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: java-sonarqube-task
spec:
#  --new v1beta1 style --
  resources:
    inputs:
      - {type: git, name: source}
  params:
    - default: 'maven:3.6.3-openjdk-8'
      name: sonarqube-image
      type: string
  steps:
    - args:
        - '-c'
        - |
          set -e
          if [ -n "${SONARQUBE_URL}" ]; then
              echo "workdir: $(pwd)" 
              java -version
              curl -L https://services.gradle.org/distributions/gradle-2.3-bin.zip -o gradle-2.3-bin.zip 
              jar -xvf gradle-2.3-bin.zip > /dev/null
              export PATH=$PATH:/workspace/source/gradle-2.3/bin
              echo "PATH=$PATH"
              chmod u+x /workspace/source/gradle-2.3/bin/gradle
              gradle -v
              echo "list: $(ls | grep gradle)" 
              export CLASSPATH=$CLASSPATH:/workspace/source/gradle-2.3/lib/*
              cp /workspace/source/gradle/wrapper/gradle-wrapper.properties \
                 /workspace/source/gradle-2.3/lib/gradle-wrapper-2.3.properties

              chmod u+x ./gradlew
              ./gradlew sonarqube -Dsonar.projectKey=${SONARQUBE_PROJECT} -Dsonar.sources=src/main -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONARQUBE_LOGIN}
          else 
              echo "Skipping Sonar Qube step because sonarqube url has not been configured"
          fi
      command:
        - /bin/bash
      env:
        - name: SONARQUBE_URL
          valueFrom:
            configMapKeyRef:
              key: SONARQUBE_URL
              name: sonarqube-config-java
              optional: true
        - name: SONARQUBE_PROJECT
          valueFrom:
            secretKeyRef:
              key: SONARQUBE_PROJECT
              name: sonarqube-access-java
              optional: true
        - name: SONARQUBE_LOGIN
          valueFrom:
            secretKeyRef:
              key: SONARQUBE_LOGIN
              name: sonarqube-access-java
              optional: true
      image: $(inputs.params.sonarqube-image)
      name: sonarqube
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: .m2/repository
          name: m2-repository
      workingDir: /workspace/source
  volumes:
    - emptyDir: {}
      name: m2-repository
